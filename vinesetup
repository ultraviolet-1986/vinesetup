#!/bin/bash
# Script Name: vinesetup
# Purpose: To ease the setup of a fresh Vine Linux installation.
# Author: William Willis Whinn
# Updated: 27/10/2015
# Notes: Written using the gedit text editor on Vine Linux 6.2 32-bit.
# Website: https://github.com/ultraviolet-1986/vinesetup

################################################################################
# プログラム変数 / PROGRAM VARIABLES
################################################################################

VERSION="1.0.3"

################################################################################
# プログラム機能 / PROGRAM FUNCTIONS
################################################################################

################################################################################
# お知らせ / NOTIFICATIONS
################################################################################

header() {
	setterm -cursor on
	clear
	echo -e " \033[1m####################################################\033[0m"
	echo -e " \033[1m#\033[0m Vine Linux Setup Menu v"$VERSION" ~ By William Willis \033[1m#\033[0m"
	echo -e " \033[1m####################################################\033[0m\n"
}

completed() {
	setterm -cursor off
	echo
	echo " *********************************************************** "
	echo " * Process completed, press any key to return to the menu. * "
	echo " *********************************************************** "
	read -n1
	clear
}

restart() {
	setterm -cursor off
	echo
	echo " ************************************************************* "
	echo " * Process completed, press any key to reboot your computer. * "
	echo " ************************************************************* "
	read -n1
	clear
	sudo reboot
}

restartNow() {
	sudo reboot
}

incorrect() {
	setterm -cursor off
	echo -en "\n\n"
	echo " *********************************************** "
	echo " * Incorrect input, press any key to continue. * "
	echo " *********************************************** "
	read -n1
}

################################################################################
# システムアップデート / INSTALL SYSTEM UPDATES
################################################################################

installUpdates() {
	header
	echo -e " \033[4mCheck for and Install Updates:\033[0m\n"
	echo -e " This option will refresh the information relating to updates and"
	echo -e " new packages and allow you to install them should you choose to.\n\n"

	read -n1 -p " Do you wish to continue [Y/N]? " answer
	case $answer in
		Y|y)
			header
			sudo killall apt-get > /dev/null 2>&1
			sudo apt-get update
			echo
			sudo apt-get upgrade
			completed
			menuSetup ;;
		N|n)
			menuSetup ;;
		*)
			incorrect
			installUpdates ;;
	esac
}

################################################################################
# 修復ソフトウェアカタログ / REPAIR SOFTWARE CATALOG
################################################################################

repairSoftwareCatalog() {
	header
	echo -e " \033[4mRepair Software Catalog:\033[0m\n"
	echo -e " This will refresh the software catalog, repair any"
	echo -e " broken dependencies and remove redundant packages.\n\n"

	read -n1 -p " Do you wish to continue [Y/N]? " answer
	case $answer in
		Y|y)
			header
			sudo killall dpkg > /dev/null 2>&1
			sudo killall apt-get > /dev/null 2>&1
			sudo apt-get update
			echo
			sudo apt-get install -f
			echo
			sudo apt-get autoremove
			completed
			menuSetup ;;
		N|n)
			menuSetup ;;
		*)
			incorrect
			repairSoftwareCatalog ;;
	esac
}

################################################################################
# 修復パッケージマネージャ / REPAIR PACKAGE MANAGER
################################################################################

repairPackageManager() {
	header
	echo -e " \033[4mRepair APT Package Manager:\033[0m\n"
	echo -e " This will completely reset your caches and catalogs in case of a"
	echo -e " '404: not found' or 'gpg' update error.\n"
	echo -e " This process may take several minutes, please remain patient.\n"
	echo -e " For more information, see the related webpage at:"
	echo -e " 'http://www.ubuntugeek.com/how-to-fix-the-ubuntu-gpg-error-badsig.html'\n\n"

	read -n1 -p " Do you wish to continue [Y/N]? " answer
	case $answer in
		Y|y)
			header
			sudo killall dpkg > /dev/null 2>&1
			sudo killall apt-get > /dev/null 2>&1
			sudo apt-get clean
			cd /var/lib/apt
			sudo rm -r lists.backup > /dev/null 2>&1
			sudo rm -r lists/partial > /dev/null 2>&1
			sudo mv lists lists.backup > /dev/null 2>&1
			sudo mkdir -p lists/partial > /dev/null 2>&1
			sudo dpkg --configure -a
			sudo apt-get clean
			sudo apt-get update
			cd
			completed
			menuSetup ;;
		N|n)
			menuSetup ;;
		*)
			incorrect
			repairPackageManager ;;
	esac
}

################################################################################
# お気に入りをインストール / INSTALL FAVOURITES
################################################################################

installFavourites() {
	header
	echo -e " \033[4mInstall Favourite Software:\033[0m\n"
	echo -e " This will install software which can ensure the smooth running"
	echo -e " of a fresh installation of Linux Mint or Ubuntu.\n"
	echo -e " This process may take several minutes, please remain patient.\n\n"

	read -n1 -p " Do you wish to continue [Y/N]? " answer
	case $answer in
	Y|y)
		header
		sudo killall apt-get > /dev/null 2>&1
    		sudo apt-get update
    		favouritesGtk
    		completed
    		menuSetup ;;
    	N|n)
    		menuSetup ;;
    	*)
    		incorrect
    		installFavourites ;;
    esac
}

favouritesGtk() {
	sudo apt-get install \
	java-*-openjdk \
	comix \
	p7zip \
	p7zip-plugins \
	clamtk \
	bleachbit \
	firefox \
	thunderbird \
	chromium \
	self-build-vlc \
	wine \
	gpgme \
	unrar \
	synaptic \
	self-build-lame \
	flac \
	self-build-broadcom-wl \
	dkms
}

################################################################################
# アップデートアンチウイルス / UPDATE ANTIVIRUS DEFINITIONS
################################################################################

updateClamAvDefinitions() {
	header
	echo -e " \033[4mUpdate ClamAV Virus Definitions:\033[0m\n"
	echo -e " This will update the ClamAV antivirus definitions to the"
	echo -e " latest version. It keeps scan operations accurate.\n"
	echo -e " NOTE: ClamAV MUST be installed for this to function, Option 4"
	echo -e " will install it for you along with the ClamTK front-end.\n\n"

	read -n1 -p " Do you wish to continue [Y/N]? " answer
	case $answer in
		Y|y)
			header
			sudo killall freshclam > /dev/null 2>&1
			sudo freshclam
			completed
			menuSetup ;;
		N|n)
			menuSetup ;;
		*)
			incorrect
			updateClamAvDefinitions ;;
	esac
}

################################################################################
# ウイルススキャンホームフォルダ / HOME FOLDER VIRUS SCAN
################################################################################

clamAvHomeScan() {
	header
	echo -e " \033[4mClamAV Home Folder Scan:\033[0m\n"
	echo -e " This will scan all files and folders in your home folder."
	echo -e " A log of this scan will be saved in your home folder.\n"
	echo -e " This process may take a long time, please remain patient.\n"
	echo -e " NOTE: ClamAV MUST be installed for this to function, Option 4"
	echo -e " will install it for you along with the ClamTK front-end.\n\n"

	read -n1 -p " Do you wish to continue [Y/N]? " answer
	case $answer in
		Y|y)
			header
			cd
			rm clamscan-home*.log > /dev/null 2>&1
			clamscan -r -l "clamscan-home($(date)).log"
			cd
			completed
			menuSetup ;;
		N|n)
			menuSetup ;;
		*)
			incorrect
			clamAvHomeScan ;;
	esac
}

################################################################################
# 外部メディアウイルススキャン / EXTERNAL MEDIA VIRUS SCAN
################################################################################

clamAvMediaScan() {
	header
	echo -e " \033[4mClamAV Removable Drive Scan:\033[0m\n"
	echo -e " This will scan all files and folders on removable drives or"
	echo -e " other mounted partitions and devices such as USB flash drives."
	echo -e " A log of this scan will be saved in your home folder.\n"
	echo -e " This process may take a long time, please remain patient.\n"
	echo -e " NOTE: ClamAV MUST be installed for this to function, Option 4"
	echo -e " will install it for you along with the ClamTK front-end.\n\n"

	read -n1 -p " Do you wish to continue [Y/N]? " answer
	case $answer in
		Y|y)
			header
			cd
			rm clamscan-removable-drives*.log > /dev/null 2>&1
			clamscan /media -r -l "clamscan-removable-drives($(date)).log"
			cd
			completed
			menuSetup ;;
		N|n)
			menuSetup ;;
		*)
			incorrect
			clamAvMediaScan ;;
	esac
}

################################################################################
# システム全体のウイルススキャン / VIRUS SCAN ENTIRE SYSTEM
################################################################################

clamAvFullScan() {
	header
	echo -e " \033[4mClamAV Full Computer Scan:\033[0m\n"
	echo -e " This will scan all files and folders on your computer."
	echo -e " It will also scan any device connected to it."
	echo -e " A log of this scan will be saved in your home folder.\n"
	echo -e " This process may take a long time, please remain patient.\n"
	echo -e " NOTE: ClamAV MUST be installed for this to function, Option 4"
	echo -e " will install it for you along with the ClamTK front-end.\n\n"

	read -n1 -p " Do you wish to continue [Y/N]? " answer
	case $answer in
		Y|y)
			header
			cd
			rm clamscan-root*.log > /dev/null 2>&1
			clamscan / -r -l "clamscan-root($(date)).log"
			cd
			completed
			menuSetup ;;
		N|n)
			menuSetup ;;
		*)
			incorrect
			clamAvFullScan ;;
	esac
}

################################################################################
# BLEACHBIT を実行 / RUN BLEACHBIT
################################################################################

runBleachbit() {
	header
	echo -e " \033[4mRun BleachBit and Reboot:\033[0m\n"
	echo -e " This option will run BleachBit with a set of pre-defined options.\n"
	echo -e " User passwords and Flash cache/cookies will not be erased.\n"
	echo -e " If BleachBit is not installed, use Option 4 on the main menuSetup to"
	echo -e " install it. User configuration is unnecessary.\n"
	echo -e " MATE, XFCE and GNOME 2 users do not need to reboot. Set the option"
	echo -e " in the 'runBleachbit' comments for your convenience and preference.\n"
	echo -e " Rebooting will prevent the desktop from crashing upon completion"
	echo -e " if you are using GNOME 3, Cinnamon or KDE.\n\n"

	read -n1 -p " Do you wish to continue [Y/N]? " answer
	case $answer in
		Y|y)
			header
			# Items that will not be erased:
			# * Flash Cache and Cookies.
			# * Memory, Localization, and Free Disk Space.
			# * User passwords (Firefox, Thunderbird, etc...)
			sudo bleachbit -c -o \
			adobe_reader.* \
			amsn.* \
			amule.* \
			audacious.* \
			bash.* \
			beagle.* \
			chromium.* \
			d4x.* \
			deepscan.* \
			easytag.* \
			elinks.* \
			emesene.* \
			epiphany.cache \
			epiphany.cookies \
			epiphany.places \
			evolution.* \
			exaile.* \
			filezilla.* \
			firefox.cache \
			firefox.cookies \
			firefox.dom \
			firefox.download_history \
			firefox.forms \
			firefox.session_restore \
			firefox.site_preferences \
			firefox.url_history \
			firefox.vacuum \
			gedit.* \
			gftp.* \
			gimp.* \
			gl-117.* \
			gnome.* \
			google_chrome.* \
			google_earth.* \
			google_toolbar.* \
			gpodder.* \
			gwenview.* \
			hippo_opensim_viewer.* \
			java.* \
			kde.* \
			konqueror.* \
			liferea.* \
			links2.* \
			midnightcommander.* \
			miro.* \
			nautilus.* \
			nexuiz.* \
			openofficeorg.* \
			opera.* \
			pidgin.* \
			realplayer.* \
			recoll.* \
			rhythmbox.* \
			screenlets.* \
			seamonkey.* \
			secondlife_viewer.* \
			skype.* \
			system.cache \
			system.clipboard \
			system.desktop_entry \
			system.recent_documents \
			system.rotated_logs \
			system.tmp \
			system.trash \
			thumbnails.* \
			thunderbird.cache \
			thunderbird.cookies \
			thunderbird.vacuum \
			transmission.cache \
			tremulous.* \
			vim.* \
			vlc.* \
			vuze.* \
			wine.* \
			winetricks.* \
			x11.* \
			xchat.* \
			xine.*

			rm -r $HOME/.thumbnails > /dev/null 2>&1
			rm -r $HOME/.recently-used > /dev/null 2>&1
			rm -r $HOME/.bash_history > /dev/null 2>&1
			rm -r $HOME/.local/share/recently-used.xbel > /dev/null 2>&1
			mkdir $HOME/.local/share/recently-used.xbel > /dev/null 2>&1
			rm -r $HOME/.local/share/recently-used.xbel > /dev/null 2>&1

			completed
			menuSetup ;;
		N|n)
			menuSetup ;;
		*)
			incorrect
			runBleachbit ;;
	esac
}

################################################################################
# プログラムメニュー / PROGRAM MENUS
################################################################################

menuSetup() {
	header
	echo -e " \033[4mMAIN MENU (Items marked with '*' require an Internet Connection)\033[0m"
	echo
	echo -e "\t\033[1m1)\033[0m Check for and Install Updates (*)"
	echo -e "\t\033[1m2)\033[0m Repair Software Catalog (*)"
	echo -e "\t\033[1m3)\033[0m Repair APT Package Manager (*)"
	echo -e "\t\033[1m4)\033[0m Install Favourite Software (*)"
	echo -e "\t\033[1m5)\033[0m Update ClamAV Virus Definitions (*)"
	echo -e "\t\033[1m6)\033[0m ClamAV Home Folder Scan"
	echo -e "\t\033[1m7)\033[0m ClamAV Removable Drive Scan"
	echo -e "\t\033[1m8)\033[0m ClamAV Full Computer Scan"
	echo -e "\t\033[1m9)\033[0m Run BleachBit (and Reboot)"
	echo -e "\t\033[1mX) Exit Program\033[0m"
	echo
	echo -en "\tEnter an Option: "
	read -n1 option

	while [ 1 ]
	do
		case $option in
			1)
				installUpdates ;;
			2)
				repairSoftwareCatalog ;;
			3)
				repairPackageManager ;;
			4)
				installFavourites ;;
			5)
				updateClamAvDefinitions ;;
			6)
				clamAvHomeScan ;;
			7)
				clamAvMediaScan ;;
			8)
				clamAvFullScan ;;
			9)
				runBleachbit ;;
			X|x)
				clear && break ;;
			*)
				incorrect
				menuSetup ;;
		esac
	done
}

################################################################################
# プログラム開始 / PROGRAM START
################################################################################

	menuSetup

# End of file.
